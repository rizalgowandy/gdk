name: Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go mod vendor -v

    - name: Test
      run: |
        go test ./... -cover -count=1 -race -coverprofile ../main.out

    - name: Set main branch code coverage
      id: codecov-main-branch
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        result-encoding: string
        script: |
          const goTool = require(`${process.env.GITHUB_WORKSPACE}/.github/scripts/gotool.js`)
          return await goTool({file: "../main.out"})

    - name: Checkout PR branch
      uses: actions/checkout@v2

    - name: Test PR branch
      run: |
        go test ./... -cover -count=1 -race -coverprofile ../pr.out

    - name: Set PR branch code coverage
      id: codecov-pr-branch
      uses: actions/github-script@v3
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        result-encoding: string
        script: |
          const goTool = require(`${process.env.GITHUB_WORKSPACE}/.github/scripts/gotool.js`)
          return await goTool({file: "../pr.out"})

    - name: Create comment
      uses: actions/github-script@v3
      env:
        main_code_cov: ${{steps.codecov-main-branch.outputs.result}}
        pr_code_cov: ${{steps.codecov-pr-branch.outputs.result}}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const runID = ${{github.run_id}}
          mainCodeCov =  process.env.main_code_cov.replace(/[\n\t\r]/g,"")
          prCodeCov =  process.env.pr_code_cov.replace(/[\n\t\r]/g,"")

          const body = `
          ### Test Coverage Result
          Success! :confetti_ball::confetti_ball::confetti_ball:

          **Code Coverage**
          Main: ${mainCodeCov}
          PR  : ${prCodeCov}

          Check Detail: [Here](https://github.com/${context.issue.owner}/${context.issue.repo}/actions/runs/${runID})
          `

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          })
